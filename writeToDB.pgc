/*#include <pgtypes_timestamp.h>*/
#include "common.h"

void
print_sqlca()
{
    fprintf(stderr, "==== sqlca ====\n");
    fprintf(stderr, "sqlcode: %ld\n", sqlca.sqlcode);
    fprintf(stderr, "sqlerrm.sqlerrml: %d\n", sqlca.sqlerrm.sqlerrml);
    fprintf(stderr, "sqlerrm.sqlerrmc: %s\n", sqlca.sqlerrm.sqlerrmc);
    fprintf(stderr, "sqlerrd: %ld %ld %ld %ld %ld %ld\n", sqlca.sqlerrd[0],sqlca.sqlerrd[1],sqlca.sqlerrd[2],
                                                          sqlca.sqlerrd[3],sqlca.sqlerrd[4],sqlca.sqlerrd[5]);
    fprintf(stderr, "sqlwarn: %d %d %d %d %d %d %d %d\n", sqlca.sqlwarn[0], sqlca.sqlwarn[1], sqlca.sqlwarn[2],
                                                          sqlca.sqlwarn[3], sqlca.sqlwarn[4], sqlca.sqlwarn[5],
                                                          sqlca.sqlwarn[6], sqlca.sqlwarn[7]);
    fprintf(stderr, "sqlstate: %5s\n", sqlca.sqlstate);
    fprintf(stderr, "===============\n");
}



extern int writeToDB(const struct tm *timestamp, double temp, double hum, double pres)
{
EXEC SQL WHENEVER SQLWARNING CALL print_sqlca();
EXEC SQL WHENEVER SQLERROR CALL print_sqlca();

EXEC SQL BEGIN DECLARE SECTION;
/*timestamp ts;*/
double t = temp;
double h = hum;
double p = pres;
EXEC SQL END DECLARE SECTION;

const char FNAME[] = "writeToDB()";

/*ts = PGTYPEStimestamp_from_asc("2000-01-01 00:00:00", NULL);*/

fprintf(stdout, "DEBUG: %s: Timestamp = %04d-%02d-%02d %02d:%02d:%02d\n", FNAME, timestamp->tm_year+1900, timestamp->tm_mon+1, timestamp->tm_mday, timestamp->tm_hour, timestamp->tm_min, timestamp->tm_sec);
fprintf(stdout, "DEBUG: %s: Temp = %2.1f\n", FNAME, temp);
fprintf(stdout, "DEBUG: %s: Hum  = %2.0f\n", FNAME, hum);
fprintf(stdout, "DEBUG: %s: Pres = %4.0f\n", FNAME, pres);

	EXEC SQL CONNECT TO wetterstation USER root;
	fprintf(stdout, "DEBUG: after DB-Connect");
	/*exec sql BEGIN WORK;*/
	EXEC SQL INSERT INTO weathervalues (time, sensor, measurement) VALUES (/*to_date('2010-11-30 22:05:15', 'YYYY-MM-DD HH24:MI:SS')*/ /*:ts*/ null, 'Temperature', :t);
	EXEC SQL COMMIT;
	fprintf(stdout, "DEBUG: after first insert");
	EXEC SQL INSERT INTO weathervalues (time, sensor, measurement) VALUES (/*to_date('2010-11-30 22:05:15', 'YYYY-MM-DD HH24:MI:SS')*/ /*:ts*/ null, 'Humidity', :h);
	EXEC SQL COMMIT;
fprintf(stdout, "DEBUG: after second insert");
	EXEC SQL INSERT INTO weathervalues (time, sensor, measurement) VALUES (/*to_date('2010-11-30 22:05:15', 'YYYY-MM-DD HH24:MI:SS')*/ /*:ts*/ null, 'Pressure', :p);
	EXEC SQL COMMIT;
fprintf(stdout, "DEBUG: after third insert");
	/*exec sql COMMIT WORK;*/
	EXEC SQL DISCONNECT CURRENT;
fprintf(stdout, "DEBUG: after DB-Disconnect");
	return 0;
}
